import io
import os
import PIL

# Imports the Google Cloud client library
from google.cloud import vision
from google.cloud.vision import types
from PIL import Image, ImageFont, ImageDraw, ImageFont

tmp_dict = dict()
x = 0
path = '/Users/huang/Documents/tw/twipic'
path_list=os.listdir(path)
path_list.sort()
for filename in path_list:
    tmp_dict[x] = os.path.join(path, filename)
    x = x+1
    #print(os.path.join(path, filename) )

#since there are 16 photos, so the loop is 16
x = 1
while (x<16):

    # Instantiates a client
    client = vision.ImageAnnotatorClient()

    # The name of the image file to annotate
    file_name = os.path.join(
        os.path.dirname(__file__),tmp_dict[x])

    # Loads the image into memory
    with io.open(file_name, 'rb') as image_file:
        content = image_file.read()

    image = types.Image(content=content)

    # Performs label detection on the image file
    response = client.label_detection(image=image)
    labels = response.label_annotations

    tag = dict()
    y = 0
    print('Labels:')
    for label in labels:
        # print(label.description)
        tag[y] = label.description
        y = y + 1

    im = Image.open(tmp_dict[x])
    #print(im.format, im.size, im.mode)
    ttfront = ImageFont.truetype("/Users/huang/Documents/tw/cmr10.ttf", 50)
    draw = ImageDraw.Draw(im)
    y = 0
    
    #draw tags to specific photos
    while(y<len(tag)):
        draw.text((10, 10+50*y), tag[y], fill=(255, 0, 0), font=ttfront)
        y = y+1
    im.save(tmp_dict[x])
    x = x+1

im.show()
print(tmp_dict)
print(tag)
